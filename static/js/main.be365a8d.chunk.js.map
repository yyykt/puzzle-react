{"version":3,"sources":["img/bg.jpg","tetriminos.ts","gameHelper.ts","hooks/useMinoGenerator.ts","hooks/useGame.ts","components/Marker.tsx","components/Cell.tsx","components/StyledBox.tsx","components/MinoBox.tsx","components/Next.tsx","components/Hold.tsx","components/Stage.tsx","components/Display.tsx","components/StartButton.tsx","components/Tetris.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","PREVIEW_SHAPES","I","J","L","O","S","T","Z","MINOINFOS","shape","0","1","2","3","color","createEmptyFiled","Array","from","isValidPos","mino","field","minoType","rotation","every","row","dy","elem","dx","x","pos","y","moveIfValid","updatedMino","succeed","hardDrop","rotate","r","dir","createMino","Math","floor","STAGE_WIDTH","place","fieldCopy","forEach","deleteOneLine","LineIndex","findIndex","deleted","updatedField","splice","push","calcVisibleStage","stage","slice","map","type","drawMino","m","flag","axis","initialMinoBag","useMinoGenerator","useState","next","setNext","hold","setHold","alreadyHolded","setAlreadyHolded","bag","useRef","popFromBag","current","length","index","random","getNext","nextCopy","nextOne","shift","Error","resetMinoGenerator","newNext","execHold","useGame","setMino","setField","gameOver","setGameOver","lineCleared","setLineCleared","timer","setTimer","checkAndSetMino","newMino","resetMino","useTimeout","start","clear","game","startGame","shiftMino","dropMino","rotateMino","placeMino","hardDropMino","count","deleteLines","finalField","holdMino","Container","styled","div","offset","center","lowerRight","upperLeft","Circle","props","Marker","OuterBox","cutoff","InnerBox","MINOINFO","css","Cell","StyledBox","padding","border","background","defaultProps","GridBox","width","Minobox","height","MemoisedMinoBox","memo","MinoBox","Next","e","i","Hold","MemorizedCell","Wrapper","Stage","reverse","Display","text","Button","button","StartButton","callback","onClick","KeyMap","bgImage","Tetris","useInterval","tabIndex","role","onKeyDown","preventDefault","keyCode","move","toFixed","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.be365a8d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.eed40435.jpg\";","export type MinoType = 'I' | 'J' | 'L' | 'O' | 'S' | 'T' | 'Z';\nexport type Rotation = 0 | 1 | 2 | 3;\n\ntype MinoInfo = {\n  shape: { [rotation in Rotation]: (0 | 1)[][] };\n  color: string;\n};\n\nconst MINOINFOS: { [minoType in MinoType]: MinoInfo } = {\n  I: {\n    shape: {\n      0: [\n        [0, 0, 0, 0],\n        [1, 1, 1, 1],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n      ],\n      1: [\n        [0, 0, 1, 0],\n        [0, 0, 1, 0],\n        [0, 0, 1, 0],\n        [0, 0, 1, 0],\n      ],\n      2: [\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [1, 1, 1, 1],\n        [0, 0, 0, 0],\n      ],\n      3: [\n        [0, 1, 0, 0],\n        [0, 1, 0, 0],\n        [0, 1, 0, 0],\n        [0, 1, 0, 0],\n      ],\n    },\n    color: '0, 255, 255', // Cyan\n  },\n  J: {\n    shape: {\n      0: [\n        [1, 0, 0],\n        [1, 1, 1],\n        [0, 0, 0],\n      ],\n      1: [\n        [0, 1, 1],\n        [0, 1, 0],\n        [0, 1, 0],\n      ],\n      2: [\n        [0, 0, 0],\n        [1, 1, 1],\n        [0, 0, 1],\n      ],\n      3: [\n        [0, 1, 0],\n        [0, 1, 0],\n        [1, 1, 0],\n      ],\n    },\n    color: '0, 0, 255', // Blue\n  },\n  L: {\n    shape: {\n      0: [\n        [0, 0, 1],\n        [1, 1, 1],\n        [0, 0, 0],\n      ],\n      1: [\n        [0, 1, 0],\n        [0, 1, 0],\n        [0, 1, 1],\n      ],\n      2: [\n        [0, 0, 0],\n        [1, 1, 1],\n        [1, 0, 0],\n      ],\n      3: [\n        [1, 1, 0],\n        [0, 1, 0],\n        [0, 1, 0],\n      ],\n    },\n    color: '255, 165, 0', // Orange\n  },\n  O: {\n    shape: {\n      0: [\n        [0, 1, 1, 0],\n        [0, 1, 1, 0],\n        [0, 0, 0, 0],\n      ],\n      1: [\n        [0, 1, 1, 0],\n        [0, 1, 1, 0],\n        [0, 0, 0, 0],\n      ],\n      2: [\n        [0, 1, 1, 0],\n        [0, 1, 1, 0],\n        [0, 0, 0, 0],\n      ],\n      3: [\n        [0, 1, 1, 0],\n        [0, 1, 1, 0],\n        [0, 0, 0, 0],\n      ],\n    },\n    color: '255, 255, 0 ', // Yellow\n  },\n  S: {\n    shape: {\n      0: [\n        [0, 1, 1],\n        [1, 1, 0],\n        [0, 0, 0],\n      ],\n      1: [\n        [0, 1, 0],\n        [0, 1, 1],\n        [0, 0, 1],\n      ],\n      2: [\n        [0, 0, 0],\n        [0, 1, 1],\n        [1, 1, 0],\n      ],\n      3: [\n        [1, 0, 0],\n        [1, 1, 0],\n        [0, 1, 0],\n      ],\n    },\n    color: '0, 255, 0', // Green\n  },\n  T: {\n    shape: {\n      0: [\n        [0, 1, 0],\n        [1, 1, 1],\n        [0, 0, 0],\n      ],\n      1: [\n        [0, 1, 0],\n        [0, 1, 1],\n        [0, 1, 0],\n      ],\n      2: [\n        [0, 0, 0],\n        [1, 1, 1],\n        [0, 1, 0],\n      ],\n      3: [\n        [0, 1, 0],\n        [1, 1, 0],\n        [0, 1, 0],\n      ],\n    },\n    color: '128, 0, 128', // Purple\n  },\n  Z: {\n    shape: {\n      0: [\n        [1, 1, 0],\n        [0, 1, 1],\n        [0, 0, 0],\n      ],\n      1: [\n        [0, 0, 1],\n        [0, 1, 1],\n        [0, 1, 0],\n      ],\n      2: [\n        [0, 0, 0],\n        [1, 1, 0],\n        [0, 1, 1],\n      ],\n      3: [\n        [0, 1, 0],\n        [1, 1, 0],\n        [1, 0, 0],\n      ],\n    },\n    color: '255, 0, 0', // Red\n  },\n};\n\nexport const PREVIEW_SHAPES: { [minoType in MinoType]: (0 | 1)[][] } = {\n  I: [[1, 1, 1, 1]],\n  J: [\n    [1, 0, 0],\n    [1, 1, 1],\n  ],\n  L: [\n    [0, 0, 1],\n    [1, 1, 1],\n  ],\n  O: [\n    [1, 1],\n    [1, 1],\n  ],\n  S: [\n    [0, 1, 1],\n    [1, 1, 0],\n  ],\n  T: [\n    [0, 1, 0],\n    [1, 1, 1],\n  ],\n  Z: [\n    [1, 1, 0],\n    [0, 1, 1],\n  ],\n};\nexport const randomMino = () => {\n  const minos: MinoType[] = ['I', 'J', 'L', 'O', 'S', 'T', 'Z'];\n  const randMino = minos[Math.floor(Math.random() * minos.length)];\n  return randMino;\n};\n\nexport default MINOINFOS;\n","import { Props as CellProps } from 'components/Cell';\nimport MINOINFOS, { MinoType, Rotation } from 'tetriminos';\n\nexport const STAGE_WIDTH = 10;\nexport const STAGE_HEIGHT = 21; // including partly visible top line\nexport const STAGE_TOTAL_HEIGHT = 40;\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () =>\n    Array.from(Array(STAGE_WIDTH), (): CellProps => ({ type: 'empty' }))\n  );\n\nexport type Field = ('empty' | MinoType)[][];\nexport const createEmptyFiled = (): Field =>\n  Array.from(Array(STAGE_TOTAL_HEIGHT), () =>\n    Array.from(Array(STAGE_WIDTH), () => 'empty')\n  );\n\nexport const isValidPos = (mino: Mino, field: Field) => {\n  const shape = MINOINFOS[mino.minoType].shape[mino.rotation];\n  return shape.every((row, dy) =>\n    row.every(\n      (elem, dx) =>\n        elem === 0 ||\n        (() => {\n          const x = mino.pos.x + dx;\n          const y = mino.pos.y - dy;\n          return (\n            x >= 0 &&\n            x < STAGE_WIDTH &&\n            y >= 0 &&\n            y < STAGE_TOTAL_HEIGHT &&\n            field[y][x] === 'empty'\n          );\n        })()\n    )\n  );\n};\n\nexport const moveIfValid = (\n  mino: Mino,\n  field: Field,\n  dx: number,\n  dy: number\n): {\n  succeed: boolean;\n  updatedMino: Mino;\n} => {\n  const { x, y } = mino.pos;\n  const updatedMino = { ...mino, pos: { x: x + dx, y: y + dy } };\n  const succeed = isValidPos(updatedMino, field);\n  return { succeed, updatedMino: succeed ? updatedMino : mino };\n};\n\nexport const hardDrop = (mino: Mino, field: Field) => {\n  let succeed = true;\n  let updatedMino = mino;\n  while (succeed) {\n    ({ succeed, updatedMino } = moveIfValid(updatedMino, field, 0, -1));\n  }\n  return updatedMino;\n};\n\nexport const rotate = (r: Rotation, dir: 'L' | 'R'): Rotation => {\n  if (r === 0) {\n    return dir === 'R' ? 1 : 3;\n  }\n  if (r === 1) {\n    return dir === 'R' ? 2 : 0;\n  }\n  if (r === 2) {\n    return dir === 'R' ? 3 : 1;\n  }\n  // r === 3\n  return dir === 'R' ? 0 : 2;\n};\n\nexport const rotateIfValid = (\n  mino: Mino,\n  field: Field,\n  dir: 'L' | 'R'\n): {\n  succeed: boolean;\n  updatedMino: Mino;\n} => {\n  const updatedMino = { ...mino, rotation: rotate(mino.rotation, dir) };\n  const succeed = isValidPos(updatedMino, field);\n  return { succeed, updatedMino: succeed ? updatedMino : mino };\n};\n\nexport type Mino = {\n  pos: { x: number; y: number };\n  minoType: MinoType;\n  rotation: Rotation;\n};\n\nexport const createMino = (minoType: MinoType): Mino => {\n  return {\n    minoType,\n    pos: {\n      x: Math.floor(STAGE_WIDTH / 2) - 2,\n      y: STAGE_HEIGHT,\n    },\n    rotation: 0,\n  };\n};\n\nexport const place = (mino: Mino, field: Field) => {\n  const fieldCopy: Field = Array.from(field, (row) => Array.from(row));\n  const shape = MINOINFOS[mino.minoType].shape[mino.rotation];\n  shape.forEach((row, dy) =>\n    row.forEach((elem, dx) => {\n      if (elem) {\n        fieldCopy[mino.pos.y - dy][mino.pos.x + dx] = mino.minoType;\n      }\n    })\n  );\n  return fieldCopy;\n};\n\nconst deleteOneLine = (field: Field) => {\n  const fieldCopy: Field = Array.from(field, (row) => Array.from(row));\n  const LineIndex = fieldCopy.findIndex((row) =>\n    row.every((elem) => elem !== 'empty')\n  );\n  if (LineIndex === -1) return { deleted: 0, updatedField: field };\n\n  fieldCopy.splice(LineIndex, 1);\n  fieldCopy.push(Array.from(Array(STAGE_WIDTH), () => 'empty'));\n  return { deleted: 1, updatedField: fieldCopy };\n};\n\nexport const deleteLines = (field: Field) => {\n  let count = 0;\n  let { deleted, updatedField } = deleteOneLine(field);\n  count += deleted;\n  while (deleted) {\n    ({ deleted, updatedField } = deleteOneLine(updatedField));\n    count += deleted;\n  }\n  return { count, updatedField };\n};\n\nexport const calcVisibleStage = (\n  field: Field,\n  mino: Mino | null\n): CellProps[][] => {\n  const stage: CellProps[][] = field\n    .slice(0, STAGE_HEIGHT)\n    .map((row) =>\n      row.map((elem) =>\n        elem === 'empty'\n          ? { type: 'empty' }\n          : { type: 'fixedBlock', minoType: elem }\n      )\n    );\n\n  const drawMino = (m: Mino, type: 'activeMino' | 'ghost') => {\n    const { x, y } = m.pos;\n    const shape = MINOINFOS[m.minoType].shape[m.rotation];\n    shape.forEach((row, dy) =>\n      row.forEach((flag, dx) => {\n        if (flag && y - dy < STAGE_HEIGHT) {\n          stage[y - dy][x + dx] = {\n            type,\n            minoType: m.minoType,\n            axis: (() => {\n              if (dx === 1 && dy === 1 && type === 'activeMino') {\n                if (m.minoType !== 'I' && m.minoType !== 'O') return 'center';\n              }\n              return undefined;\n            })(),\n          };\n        }\n      })\n    );\n    if (m.minoType === 'I' && type === 'activeMino') {\n      if (m.rotation === 1 || m.rotation === 2) {\n        if (x + 1 >= 0 && x + 1 < STAGE_WIDTH && y - 1 >= 0)\n          stage[y - 1][x + 1].axis = 'lowerRight';\n      } else if (x + 2 >= 0 && x + 2 < STAGE_WIDTH && y - 2 >= 0)\n        stage[y - 2][x + 2].axis = 'upperLeft';\n    }\n  };\n\n  if (mino) {\n    const ghost = hardDrop(mino, field);\n    drawMino(ghost, 'ghost');\n    drawMino(mino, 'activeMino');\n  }\n\n  return stage;\n};\n","import { useState, useRef } from 'react';\nimport { MinoType } from 'tetriminos';\n\nconst NUM_MINO_SHOWN = 6;\nconst initialMinoBag: MinoType[] = ['I', 'J', 'L', 'O', 'S', 'T', 'Z'];\n\nconst useMinoGenerator = () => {\n  const [next, setNext] = useState<(MinoType | null)[]>(\n    Array.from(Array(NUM_MINO_SHOWN), () => null)\n  );\n  const [hold, setHold] = useState<MinoType | null>(null);\n  const [alreadyHolded, setAlreadyHolded] = useState(false);\n  const bag = useRef([...initialMinoBag]);\n\n  const popFromBag = () => {\n    if (bag.current.length === 0) {\n      bag.current = [...initialMinoBag];\n    }\n    const index = Math.floor(Math.random() * bag.current.length);\n    const mino = bag.current[index];\n    bag.current.splice(index, 1);\n\n    return mino;\n  };\n\n  const resetMinoGenerator = () => {\n    bag.current = [...initialMinoBag];\n    const newNext = Array.from(Array(NUM_MINO_SHOWN), () => popFromBag());\n    setNext(newNext);\n    setHold(null);\n  };\n\n  const getNext = () => {\n    const nextCopy = [...next];\n    const nextOne = nextCopy.shift();\n    setAlreadyHolded(false);\n    if (nextOne) {\n      nextCopy.push(popFromBag());\n      setNext(nextCopy);\n      return nextOne;\n    }\n\n    // Assume nextOne is never null/undefined when this func called\n    throw new Error('Invalid call of getNext().');\n  };\n\n  const execHold = (mino: MinoType) => {\n    if (alreadyHolded) return false;\n    setHold(mino);\n    setAlreadyHolded(true);\n    return true;\n  };\n\n  return { next, getNext, resetMinoGenerator, hold, execHold };\n};\n\nexport default useMinoGenerator;\n","import { useState } from 'react';\nimport {\n  createMino,\n  createEmptyFiled,\n  Mino,\n  Field,\n  isValidPos,\n  rotate,\n  hardDrop,\n  place,\n  deleteLines,\n} from 'gameHelper';\nimport { MinoType } from 'tetriminos';\nimport useTimeout from '@rooks/use-timeout';\nimport useMinoGenerator from './useMinoGenerator';\n\nconst useGame = () => {\n  const [mino, setMino] = useState<Mino | null>(null);\n  const [field, setField] = useState<Field>(createEmptyFiled());\n  const [gameOver, setGameOver] = useState(false);\n  const [lineCleared, setLineCleared] = useState(0);\n  const [timer, setTimer] = useState(0);\n  const {\n    next,\n    getNext,\n    resetMinoGenerator,\n    hold,\n    execHold,\n  } = useMinoGenerator();\n\n  const resetField = () => setField(createEmptyFiled());\n\n  const checkAndSetMino = (newMino: Mino) => {\n    if (mino) {\n      const succeed = isValidPos(newMino, field);\n      if (succeed) {\n        setMino(newMino);\n      }\n      return succeed;\n    }\n    return false;\n  };\n\n  const resetMino = (minoType: MinoType) => {\n    const newMino = createMino(minoType);\n    if (isValidPos(newMino, field)) {\n      setMino(newMino);\n      return true;\n    }\n\n    setGameOver(true);\n    return false;\n  };\n\n  const shiftMino = (dir: 1 | -1) => {\n    return mino\n      ? checkAndSetMino({\n          ...mino,\n          pos: { x: mino.pos.x + dir, y: mino.pos.y },\n        })\n      : false;\n  };\n\n  const dropMino = () => {\n    return mino\n      ? checkAndSetMino({\n          ...mino,\n          pos: { x: mino.pos.x, y: mino.pos.y - 1 },\n        })\n      : false;\n  };\n\n  const hardDropMino = () => {\n    if (!mino) return;\n    const updatedMino = hardDrop(mino, field);\n    const updatedField = place(updatedMino, field);\n\n    // reset mino. needed to copy because of the async behaviour of hooks\n    // TODO wait for a while ?\n    const newMino = createMino(getNext());\n    if (isValidPos(newMino, updatedField)) {\n      setMino(newMino);\n    } else {\n      setGameOver(true);\n    }\n\n    const { count, updatedField: finalField } = deleteLines(updatedField);\n    setField(finalField);\n    setLineCleared(lineCleared + count);\n  };\n\n  const rotateMino = (dir: 'L' | 'R') => {\n    return mino\n      ? checkAndSetMino({\n          ...mino,\n          rotation: rotate(mino.rotation, dir),\n        })\n      : false;\n  };\n\n  const TIME_FOR_START = 1000; // ms\n  const { start, clear } = useTimeout(() => {\n    resetMino(getNext());\n    setTimer(0);\n  }, TIME_FOR_START);\n\n  const startGame = () => {\n    // Reset everything\n    resetField();\n    setMino(null);\n    setGameOver(false);\n    setLineCleared(0);\n    resetMinoGenerator();\n    start();\n  };\n\n  const placeMino = () => {\n    if (!mino) return;\n    const updatedField = place(mino, field);\n    setField(updatedField);\n    setMino(null);\n  };\n\n  const holdMino = () => {\n    if (!mino) return;\n    const succeed = execHold(mino.minoType);\n    if (succeed) {\n      if (hold) {\n        resetMino(hold);\n      } else {\n        resetMino(getNext());\n      }\n    }\n  };\n\n  const game = {\n    mino,\n    field,\n    gameOver,\n    lineCleared,\n  };\n  return {\n    game,\n    startGame,\n    shiftMino,\n    dropMino,\n    rotateMino,\n    resetMino,\n    placeMino,\n    hardDropMino,\n    timer,\n    setTimer,\n    next,\n    hold,\n    holdMino,\n  };\n};\n\nexport default useGame;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\ntype Props = {\n  pos: 'center' | 'lowerRight' | 'upperLeft';\n};\n\nconst Marker: FC<Props> = ({ pos }) => {\n  return (\n    <Container>\n      <Circle pos={pos} />\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n`;\n\nconst size = '10px';\nconst offset = {\n  center: `calc((100% - ${size}) / 2)`,\n  lowerRight: `calc(100% - ${size} / 2)`,\n  upperLeft: `calc(-${size} / 2)`,\n};\n\nconst Circle = styled.div<Props>`\n  width: 10px;\n  height: 10px;\n  border: 3px solid white;\n  border-radius: 50%;\n  box-sizing: border-box;\n  margin: auto;\n  /* vertical-align: middle; */\n  top: ${(props) => offset[props.pos]};\n  left: ${(props) => offset[props.pos]};\n  position: absolute;\n`;\n\nexport default Marker;\n","import React, { FC } from 'react';\nimport styled, { css } from 'styled-components';\nimport MINOINFO, { MinoType } from 'tetriminos';\nimport Marker from 'components/Marker';\n\nexport interface Props {\n  type:\n    | 'empty'\n    | 'activeMino'\n    | 'fixedBlock'\n    | 'ghost'\n    | 'previewBg'\n    | 'preview';\n  minoType?: MinoType;\n  cutoff?: boolean;\n  axis?: 'center' | 'lowerRight' | 'upperLeft';\n}\n\nconst Cell: FC<Props> = ({ type, minoType, cutoff, axis }) => {\n  return (\n    <OuterBox cutoff={cutoff}>\n      <InnerBox type={type} minoType={minoType} cutoff={cutoff}>\n        {axis ? <Marker pos={axis} /> : <div />}\n      </InnerBox>\n    </OuterBox>\n  );\n};\n\ntype x = Pick<Props, 'cutoff'>;\n\nconst OuterBox = styled.div<Pick<Props, 'cutoff'>>`\n  position: relative;\n\n  &::before {\n    display: block;\n    padding: ${(props) => (props.cutoff ? '20% 0' : '50% 0')};\n    content: '';\n  }\n`;\n\nconst InnerBox = styled.div<Props>`\n  box-sizing: border-box;\n  position: absolute;\n  top: 0;\n  height: 100%;\n  width: 100%;\n  ${(props) => {\n    if (\n      (props.type === 'fixedBlock' || props.type === 'activeMino') &&\n      props.minoType\n    ) {\n      const { color } = MINOINFO[props.minoType];\n      return css`\n        background: rgba(${color}, 0.8);\n        border: 6px outset;\n        border-color: rgba(${color}, 0.8);\n      `;\n    }\n    if (props.type === 'ghost' && props.minoType) {\n      const { color } = MINOINFO[props.minoType];\n      return css`\n        background: rgba(${color}, 0.2);\n        border: 6px outset;\n        border-color: rgba(${color}, 0.2);\n      `;\n    }\n    if (props.type === 'preview' && props.minoType) {\n      const { color } = MINOINFO[props.minoType];\n      return css`\n        background: rgba(${color}, 0.8);\n        border: 2px outset;\n        border-color: rgba(${color}, 0.8);\n      `;\n    }\n    if (props.type === 'previewBg') {\n      return css``;\n    }\n\n    // interpret as 'empty'\n    return css`\n      border: 1px inset #777;\n    `;\n  }};\n`;\nexport default Cell;\n","import styled from 'styled-components';\n\ntype Props = {\n  background?: string;\n  border?: string;\n  padding?: string;\n};\n\nconst StyledBox = styled.div<Props>`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  /* margin: 0 0 20px 0; */\n  padding: ${(props) => props.padding};\n  border: ${(props) => props.border};\n  border-radius: 10px;\n  width: 100%;\n  height: 50px;\n  font-size: 0.8em;\n  background: ${(props) => props.background};\n`;\n\nStyledBox.defaultProps = {\n  background: '#FFF',\n  border: '4px solid black',\n  padding: '5%',\n};\n\nexport default StyledBox;\n","import React, { FC } from 'react';\nimport MINOINFOS, { MinoType, PREVIEW_SHAPES } from 'tetriminos';\nimport Cell from 'components/Cell';\nimport styled from 'styled-components';\nimport StyledBox from 'components/StyledBox';\nimport { Mino } from 'gameHelper';\n\ntype Props = {\n  minoType: MinoType | null;\n};\n\nconst Minobox: FC<Props> = ({ minoType }) => {\n  if (minoType === null)\n    return <StyledBox background=\"black\" border=\"4px solid white\" />;\n  const shape = PREVIEW_SHAPES[minoType];\n  const [width, height] = [shape[0].length, shape.length];\n  const padding = (() => {\n    if (minoType === 'O') return '5% 20%';\n    if (minoType === 'I') return '5% 0%';\n    return '5% 5%';\n  })();\n\n  return (\n    <StyledBox padding={padding} background=\"black\" border=\"4px solid white\">\n      <GridBox width={width} height={height}>\n        {shape.map((row) =>\n          row.map((elem) =>\n            elem ? (\n              <Cell type=\"preview\" minoType={minoType} />\n            ) : (\n              <Cell type=\"previewBg\" />\n            )\n          )\n        )}\n      </GridBox>\n    </StyledBox>\n  );\n};\n\ntype GridBoxProps = {\n  width: number;\n  height: number;\n};\n\nconst GridBox = styled.div<GridBoxProps>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => props.width}, 1fr);\n  /* grid-template-rows: 3; */\n  grid-gap: 1px;\n  /* border: 4px solid #fff; */\n  box-sizing: border-box;\n  width: 80%;\n  margin: auto;\n`;\n\nexport default Minobox;\n","import React, { FC, memo } from 'react';\nimport { MinoType } from 'tetriminos';\nimport styled from 'styled-components';\nimport MinoBox from 'components/MinoBox';\nimport StyledBox from 'components/StyledBox';\n\ntype Props = {\n  next: (MinoType | null)[];\n};\n\nconst MemoisedMinoBox = memo(MinoBox);\n\nconst Next: FC<Props> = ({ next }) => {\n  return (\n    <Container>\n      <StyledBox>NEXT</StyledBox>\n      {next.map((e, i) => (\n        // no key warning\n        <MemoisedMinoBox minoType={e} />\n      ))}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: block;\n  padding: 0;\n`;\n\nexport default Next;\n","import React, { FC, memo } from 'react';\nimport { MinoType } from 'tetriminos';\nimport styled from 'styled-components';\nimport MinoBox from 'components/MinoBox';\nimport StyledBox from 'components/StyledBox';\n\ntype Props = {\n  hold: MinoType | null;\n};\n\nconst MemoisedMinoBox = memo(MinoBox);\n\nconst Hold: FC<Props> = ({ hold }) => {\n  return (\n    <Container>\n      <StyledBox>HOLD</StyledBox>\n      <MemoisedMinoBox minoType={hold} />\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: block;\n  padding: 0;\n`;\n\nexport default Hold;\n","import React, { FC, memo } from 'react';\nimport styled from 'styled-components';\n\nimport Cell, { Props as CellProps } from 'components/Cell';\n\nexport interface Props {\n  stage: CellProps[][];\n}\n\nconst MemorizedCell = memo(Cell);\n\nconst Stage: FC<Props> = ({ stage }) => {\n  const width = stage[0].length;\n  const height = stage.length;\n  return (\n    <Wrapper width={width} height={height}>\n      {stage.reverse().map((row, y) =>\n        row.map(({ type, minoType, axis }, x) => (\n          <MemorizedCell\n            type={type}\n            minoType={minoType}\n            axis={axis}\n            cutoff={y === 0}\n            // no key warning\n          />\n        ))\n      )}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div<{ width: number; height: number }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 4px solid #fff;\n  box-sizing: border-box;\n  width: 100%;\n  background: #557;\n`;\n\nexport default Stage;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nconst Display: FC<Props> = ({ gameOver, text }) => <Wrapper>{text}</Wrapper>;\n\nconst Wrapper = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px solid #333;\n  border-radius: 20px;\n  background: #fff;\n  width: 100%;\n  font-size: 0.8em;\n`;\ninterface Props {\n  gameOver?: boolean;\n  text: string;\n}\n\nexport default Display;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  callback?: any;\n}\nconst StartButton: FC<Props> = ({ callback }) => (\n  <Button onClick={callback}>Start Game</Button>\n);\n\nconst Button = styled.button`\n  box-sizing: border-box;\n  background: #fff;\n  min-height: 40px;\n  width: 100%;\n  cursor: pointer;\n`;\n\nexport default StartButton;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\nimport useGame from 'hooks/useGame';\nimport useInterval from 'use-interval';\n\nimport { calcVisibleStage } from 'gameHelper';\nimport bgImage from 'img/bg.jpg';\n\nimport Next from 'components/Next';\nimport Hold from 'components/Hold';\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\ntype Command =\n  | 'shiftRight'\n  | 'shiftLeft'\n  | 'rotateRight'\n  | 'rotateLeft'\n  | 'softDrop'\n  | 'hardDrop'\n  | 'hold'\n  | 'pause';\n\nconst KeyMap: { [P in Command]: number } = {\n  shiftRight: 39, // →\n  shiftLeft: 37, // ←\n  rotateRight: 88, // X\n  rotateLeft: 90, // Z\n  softDrop: 40, // ↓\n  hardDrop: 32, // Space\n  hold: 67, // C\n  pause: 27, // Esc\n};\n\nconst Tetris: FC = () => {\n  // const [dropTime, setDropTime] = useState(null);\n  // const [gameOver, setGameOver] = useState(false);\n\n  const {\n    game,\n    startGame,\n    shiftMino,\n    dropMino,\n    rotateMino,\n    hardDropMino,\n    timer,\n    setTimer,\n    next,\n    hold,\n    holdMino,\n  } = useGame();\n\n  const { mino, field, gameOver, lineCleared } = game;\n\n  const move = ({ keyCode }: { keyCode: number }) => {\n    if (keyCode === KeyMap.shiftLeft) {\n      shiftMino(-1);\n    } else if (keyCode === KeyMap.shiftRight) {\n      shiftMino(1);\n    } else if (keyCode === KeyMap.softDrop) {\n      dropMino();\n    } else if (keyCode === KeyMap.rotateLeft) {\n      rotateMino('L');\n    } else if (keyCode === KeyMap.rotateRight) {\n      rotateMino('R');\n    } else if (keyCode === KeyMap.hardDrop) {\n      hardDropMino();\n    } else if (keyCode === KeyMap.hold) {\n      holdMino();\n    }\n  };\n\n  useInterval(() => dropMino(), 1000);\n  useInterval(() => setTimer(timer + 1), 1000);\n\n  return (\n    <div\n      tabIndex={0}\n      role=\"button\"\n      onKeyDown={(e) => {\n        e.preventDefault();\n        move(e);\n      }}\n    >\n      <Wrapper>\n        <aside>\n          <Hold hold={hold} />\n        </aside>\n        <Stage stage={calcVisibleStage(field, mino)} />\n        <aside>\n          <Next next={next} />\n        </aside>\n        <aside>\n          {gameOver ? (\n            <Display text=\"Game Over\" />\n          ) : (\n            <div>\n              <Display text={`Time: ${timer}`} />\n              <Display text={`Lines: ${lineCleared}`} />\n              <Display\n                text={`LPM: ${\n                  timer && ((lineCleared / timer) * 60).toFixed(3)\n                }`}\n              />\n              {/* <Display text={`Next: ${next.join()}`} /> */}\n            </div>\n          )}\n          <StartButton callback={startGame} />\n        </aside>\n      </Wrapper>\n    </div>\n  );\n};\n\nconst Wrapper = styled.div`\n  /* width: 100%; */\n  /* height: 100%; */\n  background: url(${bgImage});\n  background-size: cover;\n  overflow: hidden;\n\n  display: flex;\n  align-items: flex-start;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 600px;\n\n  aside {\n    width: 30%;\n    max-width: 150px;\n    display: block;\n    padding: 0 20px;\n  }\n`;\n\nexport default Tetris;\n","import React from 'react';\nimport './App.css';\nimport Tetris from 'components/Tetris';\n\nconst App = () => (\n  <div className=\"App\">\n    <Tetris />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}